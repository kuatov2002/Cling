using Mirror;
using Unity.VisualScripting;
using UnityEngine;

[RequireComponent(typeof(Rigidbody))]
public class PlayerMovement : NetworkBehaviour
{
    [SerializeField] private float moveSpeed;
    [SerializeField] private float jumpForce;
    [SerializeField] private LayerMask groundLayer;

    [SerializeField] private Gun gun;

    private Rigidbody _rb;
    private bool _isGrounded;

    private void Awake()
    {
        _rb = GetComponent<Rigidbody>();
    }

    public override void OnStartLocalPlayer()
    {
        if(!isLocalPlayer) return;
        var cam = Camera.main.AddComponent<ThirdPersonCamera>();
        if (cam != null)
        {
            cam.Target = transform;
        }
    }

    private void Update()
    {
        if(!isLocalPlayer) return;
        if (Input.GetButtonDown("Jump") && _isGrounded)
        {
            _rb.linearVelocity = new Vector3(_rb.linearVelocity.x, 0f, _rb.linearVelocity.z); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å
            _rb.AddForce(Vector3.up * jumpForce, ForceMode.Impulse);
            _isGrounded = false;
        }
        if (Input.GetButtonDown("Fire1")) // –õ–µ–≤–∞—è –∫–Ω–æ–ø–∫–∞ –º—ã—à–∏
        {
            gun.Fire();
        }
    }

    private void FixedUpdate()
    {
        if(!isLocalPlayer) return;
        float horizontal = Input.GetAxisRaw("Horizontal");
        float vertical = Input.GetAxisRaw("Vertical");

        Vector3 movement = new Vector3(horizontal, 0f, vertical).normalized;

        // üîÅ –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ –≤ –ª–æ–∫–∞–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –∏–≥—Ä–æ–∫–∞
        movement = transform.TransformDirection(movement);

        // –ü—Ä—è–º–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç—å—é —Å —É—á—ë—Ç–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        Vector3 targetVelocity = movement * moveSpeed;
        _rb.linearVelocity = new Vector3(targetVelocity.x, _rb.linearVelocity.y, targetVelocity.z);

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–µ–º–ª–µ
        _isGrounded = Physics.Raycast(transform.position, Vector3.down, 1.2f, groundLayer);
    }
}